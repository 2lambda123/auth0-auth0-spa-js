name: Create NPM and GitHub Release

on:
  workflow_call:
    inputs:
      node-version:
        default: 18
        type: string
      release-directory:
        default: './'
        type: string


### TODO: Replace instances of './.github/actions/' w/ `auth0/dx-sdk-actions/` and append `@latest` after the common `dx-sdk-actions` repo is made public.
### TODO: Also remove `get-prerelease`, `get-version`, `release-create`, `tag-create` and `tag-exists` actions from this repo's .github/actions folder once the repo is public.

jobs:
  release:
    runs-on: ubuntu-latest
    environment: release

    steps:
      # Checkout the code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Get the version from the branch name
      - id: get_version
        uses: ./.github/actions/get-version

      # Get the prerelease flag from the branch name
      - id: get_prerelease
        uses: ./.github/actions/get-prerelease
        with:
          version: ${{ steps.get_version.outputs.version }}
      
      # Get the release notes
      # This will expose the release notes as env.RELEASE_NOTES
      - id: get_release_notes
        uses: ./.github/actions/get-release-notes
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.get_version.outputs.version }}
          repo_owner: ${{ github.repository_owner }}
          repo_name: ${{ github.event.repository.name }}

      # Check if the tag already exists
      - id: tag_exists
        uses: ./.github/actions/tag-exists
        with:
          tag: ${{ steps.get_version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}

      # If the tag already exists, exit with an error
      - run: echo "Test"
        env:
          test: ${{ steps.tag_exists.outputs.exists }}

      # If the tag already exists, exit with an error
      - if: steps.tag_exists.outputs.exists == 'true'
        run: exit 1

      # Publish the release to our package manager
      - uses: ./.github/actions/publish-package
        if: false
        with:
          node-version: ${{ inputs.node-version }}
          npm-token: ${{ secrets.NPM_TOKEN }}
          version: ${{ steps.get_version.outputs.version }}
          release-directory: ${{ inputs.release-directory }}

      # Create a release for the tag
      - uses: ./.github/actions/release-create
        if: false
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ steps.get_version.outputs.version }}
          body: ${{ env.RELEASE_NOTES }}
          tag: ${{ steps.get_version.outputs.version }}
          commit: ${{ github.sha }}
          prerelease: ${{ steps.get_prerelease.outputs.prerelease }}
